@using ABS_LMS.Models.Security
@using ABS_LMS.Service.Model
@using PagedList.Mvc
@model ABS_LMS.Models.EmployeeLeaveIndexViewModel

@{
    ViewBag.Title = "Index";
}

<h1>Leave Details </h1>
<div class="panel panel-default">
    <div class="panel-heading">Leave Record</div>
    <div class="panel-body">
        @if (Model != null)
        {
    <p class="Link-btn">
        @if (HttpCurrentUser.IsHR || HttpCurrentUser.IsAdmin)
        {
            @Html.ActionLink("Csv Download", "EmployeeReportCsvDownload", new {id = HttpCurrentUser.EmployeeId}, new {@class = "btn btn-default"})
        }
        @Html.ActionLink("Create New", "Create", new {id = HttpCurrentUser.EmployeeId}, new {@class = "btn btn-default"}) &nbsp; &nbsp;
        @Html.ActionLink("Current Month Leave", "Index", "Leave", new {id = HttpCurrentUser.EmployeeId}, new {@Id = "Leaves", @class = "btn btn-default"}) &nbsp; &nbsp;
        <a id="leavehistory" class="btn btn-default">Leave History</a>
        @*@Html.ActionLink("Leave History", "History", "Leave", new { id = HttpCurrentUser.EmployeeId }, new { @Id = "Leaves", @class = "btn btn-default" }) &nbsp; &nbsp;*@
        @if (HttpCurrentUser.IsManager)
        {
            @Html.ActionLink("Leave Pending For Approval", "LeavePendingForApproval", new {id = HttpCurrentUser.EmployeeId}, new {@class = "btn btn-default"})
        }
        @if (HttpCurrentUser.IsHR)
        {
            @Html.ActionLink("Employee Leave Details", "ApprovedLeaveDetails", new {id = HttpCurrentUser.EmployeeId}, new {@class = "btn btn-default"})
        }
    </p>
    <div class="row">
        @using (Html.BeginForm("History", "Leave", FormMethod.Post))
        {
        <div class="row hide" id="leavehistorysearchpanel">
            <div class="col-lg-7">
                <div class="panel panel-default">
                    <div class="panel-heading">Select Range</div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="col-lg-4">
                                @Html.Label("FromDate:")
                                @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control", @Value = "" })
                            </div>
                            <div class="col-lg-8">
                                <div class="col-lg-6">
                                    @Html.Label("ToDate:")
                                    @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control", @Value = "" })
                                </div>
                                <div class="col-lg-6">
                                    @Html.Label("White", new { @style = "color: white;" })
                                    <input type="submit" readonly value="Submit" id="leavehistorysubmitbutton" />
                                    @*@Html.ActionLink("Submit", "History", "Leave", new {id = HttpCurrentUser.EmployeeId}, new {@Id = "Leaves", @class = "btn btn-default"}) &nbsp; &nbsp;*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        }
    </div>
        if (@Model.EmployeeLeaveDetails.Any())
    {<div class="leaveHistory" id="leavehistorytable">

            <div class="desktopview">
                <br />

                <br />
                <table class="table table-bordered">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.EmployeeLeaveDetails.FirstOrDefault().LeaveStartDate)

                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EmployeeLeaveDetails.FirstOrDefault().LeaveEndDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EmployeeLeaveDetails.FirstOrDefault().LeaveTypeId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EmployeeLeaveDetails.FirstOrDefault().NoOfDays)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EmployeeLeaveDetails.FirstOrDefault().Reason)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EmployeeLeaveDetails.FirstOrDefault().LeaveStatus)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EmployeeLeaveDetails.FirstOrDefault().ApprovedBy)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EmployeeLeaveDetails.FirstOrDefault().CreatedDateUTC)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.EmployeeLeaveDetails)
                 {
                <tr>
                    <td>
                        @item.LeaveStartDate.ToString("dd-MMM-yyyy")
                    </td>
                    <td>
                        @item.LeaveEndDate.ToString("dd-MMM-yyyy")
                    </td>
                    <td>
                        @item.LeaveTypeName
                    </td>
                    <td>
                        @item.NoOfDays
                    </td>
                    <td>
                        @item.Reason
                    </td>
                    <td id="@item.EmployeeLeaveHistoryId">
                        @item.LeaveStatusDisplayName
                    </td>
                    <td>
                        @item.ApprovedPersonName
                    </td>
                    <td>
                        @string.Format("{0:dd-MMM-yyyy}", item.CreatedDateUTC)
                    </td>
                    <td class="Linkbtn">
                        @if (item.LeaveStatusName != LeaveStatus.Reject.ToString() && item.LeaveStatusName != LeaveStatus.Cancel.ToString())
                             {
                            <table class="@item.EmployeeLeaveHistoryId Linkbtn" style="@(item.LeaveStatusName == LeaveStatus.Cancel.ToString() ? "display:none" : "display:block" )">
                                <tr>
                                    @if (item.LeaveStatusName != LeaveStatus.Approve.ToString())
                                         {
                                        <td>
                                            @Html.ActionLink("Edit", "Edit", new {id = HttpCurrentUser.EmployeeId, leaveId = item.EmployeeLeaveHistoryId}, new {@class = "linktobtn"})
                                        </td>
                                        <td>
                                            <input type="button" value="@LeaveStatus.Submit.ToString()" style="@(item.LeaveStatusName == LeaveStatus.Submit.ToString() ? "display:none" : "display:block" )" data-status="Submit" data-historyid="@item.EmployeeLeaveHistoryId" class="btn btn-default submitbtn statusbtn" />
                                        </td>
                                         }
                                    <td>
                                        <input type="button" value="@LeaveStatus.Cancel.ToString()" data-status="Cancel" style="@(item.LeaveStatusName == LeaveStatus.Cancel.ToString() ? "display:none" : "display:block" )" data-historyid="@item.EmployeeLeaveHistoryId" class="btn btn-default cancelbtn statusbtn" />
                                    </td>
                                </tr>
                            </table>
                             }
                    </td>
                </tr>
                 }
                </table>
            </div>
            <div class="row mobileview">
                @foreach (var item in Model.EmployeeLeaveDetails)
             {
            <div class="col-md-12 main">
                <div class="col-md-6 ">
                    <div class="setfloat">
                        @Html.LabelFor(modelItem => item.LeaveStartDate)
                    </div>
                    <div class="setfloat">
                        @item.LeaveStartDate.ToString("dd-MMM-yyyy")
                    </div>
                    <div class="setfloat ">
                        @Html.LabelFor(modelItem => item.LeaveEndDate)
                    </div>

                    <div class="setfloat ">
                        @item.LeaveEndDate.ToString("dd-MMM-yyyy")
                    </div>
                    <div class="setfloat ">
                        @Html.LabelFor(modelItem => item.LeaveTypeName)
                    </div>

                    <div class="setfloat ">
                        @item.LeaveTypeName
                    </div>
                    <div class="setfloat ">
                        @Html.LabelFor(modelItem => item.NoOfDays)
                    </div>

                    <div class="setfloat ">
                        @item.NoOfDays
                    </div>
                    <div class="setfloat ">
                        @Html.LabelFor(modelItem => item.Reason)
                    </div>

                    <div class="setfloat ">
                        @item.Reason
                    </div>
                    <div class="setfloat ">
                        @Html.LabelFor(modelItem => item.LeaveStatusName)
                    </div>

                    <div class="setfloat  @item.EmployeeLeaveHistoryId ">
                        @item.LeaveStatusDisplayName
                    </div>
                    <div class="setfloat ">
                        @Html.LabelFor(modelItem => item.ApprovedPersonName)
                    </div>

                    <div class="setfloat ">
                        @item.ApprovedPersonName
                    </div>
                    <div class="setfloat ">
                        @Html.LabelFor(modelItem => item.CreatedDateUTC)
                    </div>
                    <div class="setfloat ">
                        @string.Format("{0:dd-MMM-yyyy}", item.CreatedDateUTC)
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="setfloat link-align">
                        @if (item.LeaveStatusName != LeaveStatus.Reject.ToString() && item.LeaveStatusName != LeaveStatus.Cancel.ToString())
                             {
                            <div class="@item.EmployeeLeaveHistoryId Linkbtn" style="@(item.LeaveStatusName == LeaveStatus.Cancel.ToString() ? " display:none" : "display:block" )">
                                : "display:block" )">
                                <div>
                                    @if (item.LeaveStatusName != LeaveStatus.Approve.ToString())
                                         {
                                        <div>
                                            @Html.ActionLink("Edit", "Edit", new {id = HttpCurrentUser.EmployeeId, leaveId = item.EmployeeLeaveHistoryId}, new {@class = "linktobtn"})
                                        </div>
                                        <div>
                                            <input type="button" value="@LeaveStatus.Submit.ToString()" style="@(item.LeaveStatusName == LeaveStatus.Submit.ToString() ? "display:none" : "display:block" )" data-status="Submit" data-historyid="@item.EmployeeLeaveHistoryId" class="btn btn-default submitbtn statusbtn" />
                                        </div>
                                         }
                                    <div>
                                        <input type="button" value="@LeaveStatus.Cancel.ToString()" data-status="Cancel" style="@(item.LeaveStatusName == LeaveStatus.Cancel.ToString() ? "display:none" : "display:block" )" data-historyid="@item.EmployeeLeaveHistoryId" class="btn btn-default cancelbtn statusbtn" />
                                               "display:block" )" data-historyid="@item.EmployeeLeaveHistoryId" class="btn btn-default cancelbtn statusbtn" />
                                    </div>
                                </div>
                            </div>
                             }
                    </div>
                </div>
            </div>
             }
            </div>
            <div>
                Page @(Model.EmployeeLeaveDetails.PageCount < Model.EmployeeLeaveDetails.PageNumber ? 0 : Model.EmployeeLeaveDetails.PageNumber) of @Model.EmployeeLeaveDetails.PageCount
            </div>
            @Html.PagedListPager(Model.EmployeeLeaveDetails, pagenumber => Url.Action("Index", new {pagenumber}))
        </div>
        }
    else
    {
        <div class="row">
            <div class="col-lg-7">
                <div class="panel panel-default">
                    <div class="panel-heading">No Record Found.</div>
                </div>
            </div>
        </div>
    }
        }
    </div>
</div>
                @section Scripts {

                    <script>

                        $(document).ready(function () {
                            $('.nav #Leaves').addClass('active');
                            $(document).on("click", ".statusbtn", function () {
                                var row = $(this),
                                    status = row.data("status"),
                                    historyid = row.data("historyid");

                                if (confirm('Are you sure?')) {
                                    $.ajax({
                                        type: "POST",
                                        url: "/Leave/LeaveStatus",
                                        data: { status: status, historyid: historyid },
                                        dataType: 'json',
                                        success: function (response) {
                                            if (parseInt(response) > 0) {

                                                $('#' + historyid).text(status);
                                                $('.mobileview #' + historyid).text(status);
                                                if (status == "Submit") {
                                                    $('.' + historyid + ' .submitbtn').css('display', 'none');
                                                }
                                                if (status == "Cancel") {
                                                    $('.' + historyid).css('display', 'none');
                                                }
                                            }
                                        },
                                        error: function () {
                                        }
                                    });
                                }
                            });
                           

                            $("#leavehistory").click(function () {
                                $("#leavehistorysearchpanel").removeClass("hide");
                                $("#leavehistorytable").hide();
                            });

                            $("#leavehistorysubmitbutton").click(function () {
                                $("#leavehistorysearchpanel").removeClass("hide");
                                var start = $("#FromDate").datepicker("getDate");
                                var end = $("#ToDate").datepicker("getDate");
                                if (end >= start) {
                                } else {
                                    alert("Start Date is greater than End Date");
                                }
                                if ($("#FromDate").val() == '' || $("#ToDate").val() == '') {
                                    alert("Select valid date range.");
                                    return false;
                                } 
                            });

                            $("#FromDate").datepicker({
                                dateFormat: "dd-M-yy",
                                changeMonth: true,
                                changeYear: true,
                                constrainInput: true,
                                onSelect: function () {

                                }
                            }).val();
                            $("#ToDate").datepicker({
                                dateFormat: "dd-M-yy",
                                changeMonth: true,
                                changeYear: true,
                                constrainInput: true,
                                onSelect: function () {
                                    $("#EmployeeLeaveDetails_NoOfDays").val("");
                                    var start = $("#FromDate").datepicker("getDate");
                                    var end = $("#ToDate").datepicker("getDate");
                                    if (start == null)
                                        return;
                                    if (end >= start) {
                                    } else {
                                        alert("Start Date is greater than End Date");
                                    }
                                }
                            }).val();
                        });

                    </script>

                }
