@using ABS_LMS.Models.Security
@model ABS_LMS.Models.EmployeeLeaveViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Leave", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="row col-md-6 textboxsize">
      
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "alert alert-warning" })

        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.EmployeeLeaveDetails.EmployeeId, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EmployeeLeaveDetails.EmployeeId, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.EmployeeLeaveDetails.EmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeLeaveDetails.LeaveStartDate, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.EmployeeLeaveDetails.LeaveStartDate, "{0:dd/MM/yyyy}", new { @class = "" })
                @Html.ValidationMessageFor(model => model.EmployeeLeaveDetails.LeaveStartDate, "", new { @class = "pull-left alert alert-warning" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeLeaveDetails.LeaveEndDate, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.EmployeeLeaveDetails.LeaveEndDate, "{0:dd/MM/yyyy}", new { @class = "" })
                @Html.ValidationMessageFor(model => model.EmployeeLeaveDetails.LeaveEndDate, "", new { @class = "pull-left alert alert-warning", @data_date_format= "mm/dd/yy" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.EmployeeLeaveDetails.JoiningDate, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.EmployeeLeaveDetails.JoiningDate, new { htmlAttributes = new { @class = "" } })
                    @Html.ValidationMessageFor(model => model.EmployeeLeaveDetails.JoiningDate, "", new { @class = "pull-left alert alert-warning" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeLeaveDetails.LeaveTypeId, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.EmployeeLeaveDetails.LeaveTypeId, Model.LeaveType, new { @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeLeaveDetails.NoOfDays, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.EmployeeLeaveDetails.NoOfDays,  new { @class = "", @readonly = "true" })
                @Html.ValidationMessageFor(model => model.EmployeeLeaveDetails.NoOfDays, "", new { @class = "pull-left alert alert-warning" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeLeaveDetails.Reason, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EmployeeLeaveDetails.Reason, new { htmlAttributes = new { @class = "", @cols = 80, @rows = 5 } })
                @Html.ValidationMessageFor(model => model.EmployeeLeaveDetails.Reason, "", new { @class = "pull-left alert alert-warning" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeLeaveDetails.LeaveStatus, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.EmployeeLeaveDetails.LeaveStatus, Model.LeaveStatusEnums, new { @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeLeaveDetails.ApprovedBy, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.EmployeeLeaveDetails.ApprovedPersonName,  new { @class = "", @readonly = "true" })
                @Html.HiddenFor(model => model.EmployeeLeaveDetails.ApprovedPersonName)
                @Html.HiddenFor(model => model.EmployeeLeaveDetails.ApprovedBy)
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="Apply Changes" class="btn btn-default"/>
            </div>
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index", new { id = HttpCurrentUser.EmployeeId })

        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function () {
            $('.nav #Leaves').addClass('active');
            $("#EmployeeLeaveDetails_LeaveStartDate").datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                constrainInput: true,
                onSelect: function () {
                    $("#EmployeeLeaveDetails_NoOfDays").val("");
                    var start = $("#EmployeeLeaveDetails_LeaveStartDate").datepicker("getDate");
                    var end = $("#EmployeeLeaveDetails_LeaveEndDate").datepicker("getDate");
                    if (end == null)
                        return;
                    if (end >= start) {
                        GetActualLeave();
                    } else {
                        alert("Start Date is greater than End Date");
                    }
                }
            }).val();

            $("#EmployeeLeaveDetails_LeaveEndDate").datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                constrainInput: true,
                onSelect: function () {
                    $("#EmployeeLeaveDetails_NoOfDays").val("");
                    var start = $("#EmployeeLeaveDetails_LeaveStartDate").datepicker("getDate");
                    var end = $("#EmployeeLeaveDetails_LeaveEndDate").datepicker("getDate");
                    if (start == null)
                        return;
                    if (end >= start) {
                        GetActualLeave();
                    } else {
                        alert("Start Date is greater than End Date");
                    }
                }
            }).val();

            $("#EmployeeLeaveDetails_JoiningDate").datepicker().on("changeDate", function (e) {
                $(this).datepicker("hide");
            });
        });

        function GetActualLeave() {
            var url = "/Leave/GetActualLeaveDaysCount/";
            var start = $("#EmployeeLeaveDetails_LeaveStartDate").val();
            var end = $("#EmployeeLeaveDetails_LeaveEndDate").val();
            $.ajax({
                url: url,
                data: { startDate: start, endDate: end },
                cache: false,
                dataType: "Json",
                type: "POST",
                success: function (data) {
                    //alert("result : " + data["Value"]);
                    $("#EmployeeLeaveDetails_NoOfDays").val(data["Value"]);
                },
                error: function (response) {
                    alert("Error Occurred ");
                }
            });
        }

    </script>

}